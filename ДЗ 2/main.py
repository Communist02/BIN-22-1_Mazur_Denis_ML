from processing import Processing

pc = Processing()

texts = [
    'NLTK предлагает удобные инструменты для множества задач NLP: токенизация, стемминг, лемматизация, морфологический и синтаксический анализ, а также анализ настроений. Библиотека идеально подходит как для начинающих, так и для опытных разработчиков, предоставляя интуитивно понятный интерфейс и обширную документацию.',
    'Уже полгода прошло с того момента, как 17-летнюю Маомао похитили и заставили трудиться в императорском дворце обычной служанкой. Работа тяжёлая, но девушка решила не сдаваться, не унывать и честно вкалывать, пока её не отпустят на покой. Планы изменились, когда до Маомао дошли вести о том, что детей императора одолел серьёзный недуг.',
    'Девушка решила тайком попробовать разобраться и помочь, рассчитывая на свой опыт в фармацевтике, которой она занималась раньше, когда проживала в Квартале красных фонарей. Несмотря на то, что Маомао не хотела привлекать к себе внимания, её вмешательство и талант не остались незамеченными.',
    'Вскоре Маомао оказалась вхожа во внутренние покои и вступила в круг приближённых императора. Благодаря своим знаниям и эксцентричному характеру Маомао произведёт фурор во дворце!'
]

tokensList = []

for text in texts:
    tokens = pc.tokenize(text)  # Токенизация
    tokens = pc.lematize(tokens)  # Лемматизация
    tokens = pc.delete_stop_words(tokens)  # Удаление стоп слов

    tokensList.append(tokens)

    print(' '.join(tokens))  # Вывод текста после обработки
    print()
    print(pc.bag_of_words(tokens)) # Вывод Bag Of Words
    print()
    print(pc.tf(tokens)) # Вывод TF
    print('-----------------------------')

print('#############################')
print(pc.idf(tokensList)) # Вывод IDF
print()
print(pc.tf_idf(tokensList, 1)) # Вывод TF-IDF
